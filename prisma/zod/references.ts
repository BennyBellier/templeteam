import * as z from "zod";
import {
  CompleteReferenceCategory,
  RelatedReferenceCategoryModel,
} from "./index";

export const ReferencesModel = z.object({
  /**
   * The unique identifier for the References
   * @default {Generated by database}
   */
  id: z.string(),
  /**
   * name of the reference
   */
  name: z.string(),
  /**
   * Filename of the image of reference
   */
  img: z.string().nullish(),
  /**
   * Link to website page or reference website
   */
  href: z.string().nullish(),
  /**
   * alt text for Image
   */
  alt: z.string(),
  categoryId: z.number().int(),
});

export interface CompleteReferences extends z.infer<typeof ReferencesModel> {
  category: CompleteReferenceCategory;
}

/**
 * RelatedReferencesModel contains all relations on your model in addition to the scalars
 *
 * NOTE: Lazy required in case of potential circular dependencies within schema
 */
export const RelatedReferencesModel: z.ZodSchema<CompleteReferences> = z.lazy(
  () =>
    ReferencesModel.extend({
      /**
       * Category of the reference
       */
      category: RelatedReferenceCategoryModel,
    }),
);
