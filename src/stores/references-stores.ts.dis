import { trpc } from "@/trpc/TrpcProvider";
import type { References } from "@prisma/client";
import { createStore } from "zustand/vanilla";

export type ReferencesState = {
  references: References[];
};

export type ReferencesActions = {
  fetchReferences: () => void;
  setReferences: (data: References[]) => void;
};

export type ReferencesStore = ReferencesState & ReferencesActions;

export const createReferencesStore = (initProps?: Partial<ReferencesState>) => {
  const DEFAULT_PROPS: ReferencesState = {
    references: [],
  };
  return createStore<ReferencesStore>()((set) => ({
    ...DEFAULT_PROPS,
    ...initProps,
    fetchReferences: () => {
      try {
        const { data, error } = trpc.references.getAll.useQuery();
        if (error) {
          throw new Error(error.message);
        }
        set({ references: data ?? [] });
      } catch (err: unknown) {
        console.log(err);
      }
    },
    setReferences: (data: References[]) => {
      set({ references: data ?? [] });
    },
  }));
};
